#!@PYTHON@
#
# Copyright (c) 2015 LAAS/CNRS
# All rights reserved.
#
# Permission to use, copy, modify, and distribute this software for any purpose
# with or without   fee is hereby granted, provided   that the above  copyright
# notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS  SOFTWARE INCLUDING ALL  IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR  BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR  ANY DAMAGES WHATSOEVER RESULTING  FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION,   ARISING OUT OF OR IN    CONNECTION WITH THE USE   OR
# PERFORMANCE OF THIS SOFTWARE.
#
#                                            Anthony Mallet on Mon Nov  9 2015
#
import sys
import os.path
from optparse import OptionParser
from roslib.gentools import get_file_dependencies, compute_md5
import rospkg

# parse options
p = OptionParser(usage = 'usage: %prog [options] file',
                 prog = os.path.basename(__file__))

p.add_option('-o', action = 'store', dest = 'dest',
             metavar = 'FILE', help = 'Output md5 in FILE')
p.add_option('-f', action = 'store', dest = 'fmt',
             metavar = 'FORMAT', help = 'Printf format for md5')
p.add_option('-M', action = 'store_true', dest = 'deps',
             help = 'Generate dependency file')

(options, args) = p.parse_args()

if len(args) != 1:
  p.error("no input file")

# rospack instance for caching deps
rospack = rospkg.RosPack()

# get dependencies
try:
  deps = get_file_dependencies(args[0], rospack=rospack)
except Exception as e:
  print('%s: %s' % (args[0], str(e)))
  sys.exit(2)

# create dependency file
if options.deps:
  if options.dest:
    with open(options.dest + '.d', "w") as d:
      for f in deps['files'].itervalues():
        d.write('%s: %s\n' % (options.dest, f))
  else:
    p.error('-M requires -o')

# compute md5
md5 = compute_md5(deps, rospack=rospack)
if not options.fmt:
  options.fmt = '%s'

if options.dest:
  with open(options.dest, "w") as d:
    d.write((options.fmt+'\n') % md5)
else:
  print(options.fmt % md5)
