<'
#
# Copyright (c) 2012-2013 LAAS/CNRS
# All rights reserved.
#
# Permission to use, copy, modify, and distribute this software for any purpose
# with or without   fee is hereby granted, provided   that the above  copyright
# notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS  SOFTWARE INCLUDING ALL  IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR  BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR  ANY DAMAGES WHATSOEVER RESULTING  FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION,   ARISING OUT OF OR IN    CONNECTION WITH THE USE   OR
# PERFORMANCE OF THIS SOFTWARE.
#
#                                             Anthony Mallet on Mon Feb  1 2010
#

# check arguments
if {[llength $argv] != 1} { error "expected arguments: input" }
lassign $argv input

# compute handy shortcuts
set component [lindex [dotgen component] 0]
set comp [$component name]
'>
# Generated by <"[dotgen genom version]">. Do not edit.

ACLOCAL_AMFLAGS=	-I autoconf

# --- component ------------------------------------------------------------

<'# codel compile and link flags
set codels_cflags [list]; set codels_ldflags [list]
foreach c [dotgen components] {
  lappend codels_cflags \$(lib[$c name]_codels_CFLAGS)
  lappend codels_ldflags \$(lib[$c name]_codels_LIBS)
}
'>

lib_LTLIBRARIES=lib<"$comp">-bip-pocolibs.la

lib<"$comp">_bip_pocolibs_la_SOURCES=\
<'foreach c [dotgen components] {'>
	src/<"[$c name]">_c_types.h			\
	src/<"[$c name]">_main.c			\
	src/<"[$c name]">_control_task.c		\
	src/<"[$c name]">_control_codels.c		\
	src/<"[$c name]">_msglib.c			\
	src/<"[$c name]">_portlib.c			\
	src/<"[$c name]">_remotelib.h			\
	src/<"[$c name]">_remotelib.c			\
	src/<"[$c name]">_activity.c			\
	src/<"[$c name]">_exception.c			\
<'  foreach t [$c tasks] {'>
	src/<"[$c name]">_<"[$t name]">_exec_task.c	\
	src/<"[$c name]">_<"[$t name]">_exec_codels.c	\
<'  }'>
<'}'>
	src/serialize.h					\
	src/typecopy.h

lib<"$comp">_bip_pocolibs_la_CFLAGS=\
	$(PTHREAD_CFLAGS)
lib<"$comp">_bip_pocolibs_la_CPPFLAGS=\
	$(codels_CFLAGS) $(pocolibs_CFLAGS) $(genom3_CFLAGS)
lib<"$comp">_bip_pocolibs_la_LIBADD=\
	$(codels_LIBS) $(pocolibs_LIBS) $(PTHREAD_LIBS)

# This could be much smarter, but will do for now.
all-local: src/bip/out/system

src/bip/out/system: lib<"$comp">-bip-pocolibs.la src/bip/out/CMakeLists.txt
	make src/bip/out/Makefile
	(cd src/bip/out ;\
	make)

src/bip/out/CMakeLists.txt: src/bip/<"$comp">_BIPGenoM3.bip \
		       src/bip/external/<"$comp">_BIPGenoM3.cpp \
		       src/bip/external/<"$comp">_main.cpp \
		       src/bip/external/<"$comp">_BIPGenoM3.hpp Makefile
	(cd src/bip ; \
	mkdir -p out ;\
	bipc.sh -p <"$comp">_BIPGenoM3 -d "Compound_<"$comp">()" --gencpp-optim 3 --gencpp-no-main --gencpp-cc-extra-src external/<"$comp">_main.cpp --gencpp-cc-I .. --gencpp-output-dir out --gencpp-ld-L ${HOME}/work/lib --gencpp-ld-L ../../.libs --gencpp-ld-l portLib --gencpp-ld-l <"$comp">-bip-pocolibs --gencpp-ld-l rt --gencpp-cc-I external --gencpp-ld-l pthread)

src/bip/out/Makefile: src/bip/out/CMakeLists.txt 
	(cd src/bip/out ;\
	cmake -DCMAKE_BUILD_TYPE=Release CMakeLists.txt)

clean-local:
	rm -rf src/bip/out

# --- regen ----------------------------------------------------------------

.PHONY: regen
depend/input.d regen: <"$input">
	${genom3} <"[dotgen genom cmdline]"> <"[dotgen template dir]"> -s 1 -C . $<

# must fool automake to generate a native include...
$(eval include depend/input.d)
